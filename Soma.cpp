//-------------------------------------------------------------------------------------------------------------------
//【文件名】Soma.cpp
//【功能模块和目的】神经元胞体类的实现，包含胞体的所有功能实现
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------

#include "Soma.hpp"
#include "Synapse.hpp"

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::Soma
//【函数功能】Soma类的默认构造函数，初始化偏置、激活函数类型和输出
//【参数】无
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
Soma::Soma() : bias(0.0), activationFunctionType(0), output(0.0) {}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::Soma
//【函数功能】Soma类的带参构造函数，初始化输入、偏置、激活函数类型
//【参数】inputs - 输入向量，bias - 偏置值，activationFunctionType - 激活函数类型
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
Soma::Soma(std::vector<double> inputs, double bias, int activationFunctionType)
    : inputs(inputs)
    , bias(bias)
    , activationFunctionType(activationFunctionType)
    , output(0.0)
{
    updateOutput();
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::addInput
//【函数功能】向胞体添加一个输入信号并更新输出
//【参数】input - 输入信号值
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
void Soma::addInput(double input) {
    inputs.push_back(input);
    updateOutput();
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::getInputs
//【函数功能】获取胞体的所有输入信号
//【参数】无
//【返回值】std::vector<double> - 输入信号向量
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
std::vector<double> Soma::getInputs() const {
    return inputs;
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::setInputs
//【函数功能】设置胞体的输入信号并更新输出
//【参数】inputs - 输入信号向量
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
void Soma::setInputs(const std::vector<double>& inputs) {
    this->inputs = inputs;
    // updateOutput();
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::setBias
//【函数功能】设置胞体的偏置值并更新输出
//【参数】bias - 偏置值
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
void Soma::setBias(double bias) {
    this->bias = bias;
    updateOutput();
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::getBias
//【函数功能】获取胞体的偏置值
//【参数】无
//【返回值】double - 偏置值
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double Soma::getBias() const {
    return bias;
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::getActivationFunctionType
//【函数功能】获取激活函数类型
//【参数】无
//【返回值】int - 激活函数类型
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
int Soma::getActivationFunctionType() const {
    return activationFunctionType;
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::setActivationFunctionType
//【函数功能】设置激活函数类型并更新输出
//【参数】type - 激活函数类型
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
void Soma::setActivationFunctionType(int type) {
    this->activationFunctionType = type;
    updateOutput();
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::activate
//【函数功能】根据激活函数类型对输入进行激活处理
//【参数】sum - 输入信号的加权和
//【返回值】double - 激活后的输出信号
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double Soma::activate(double sum) const {
    switch (activationFunctionType) {
        case 1: return ActivationFunc::sigmoid(sum);
        case 2: return ActivationFunc::tanh(sum);
        case 3: return ActivationFunc::relu(sum);
        default: return ActivationFunc::linear(sum);
    }
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::updateOutput
//【函数功能】更新胞体的输出信号
//【参数】无
//【返回值】无
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
void Soma::updateOutput() {
    double sum = bias;
    for (const auto& signal : inputs) {
        sum += signal;
    }
    output = activate(sum);
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】Soma::getOutput
//【函数功能】获取胞体的输出信号
//【参数】无
//【返回值】double - 输出信号值
//【开发者及日期】开发者姓名 2025年7月21日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double Soma::getOutput() const {
    return output;
}