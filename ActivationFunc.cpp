//-------------------------------------------------------------------------------------------------------------------
//【文件名】ActivationFunc.cpp
//【功能模块和目的】激活函数类的实现，提供神经网络中常用的激活函数
//【开发者及日期】李孟涵 2025年7月13日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------

#include "ActivationFunc.hpp" // 激活函数所属头文件
#include <cmath> // 数学函数库

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】ActivationFunc::sigmoid
//【函数功能】实现sigmoid激活函数，将输入映射到(0,1)区间
//【参数】x - 输入值
//【返回值】double - sigmoid函数的输出值
//【开发者及日期】李孟涵 2025年7月13日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double ActivationFunc::sigmoid(double x) {
    return 1.0 / (1.0 + std::exp(-x));
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】ActivationFunc::tanh
//【函数功能】实现双曲正切激活函数，将输入映射到(-1,1)区间
//【参数】x - 输入值
//【返回值】double - tanh函数的输出值
//【开发者及日期】李孟涵 2025年7月13日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double ActivationFunc::tanh(double x) {
    return std::tanh(x);
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】ActivationFunc::relu
//【函数功能】实现ReLU激活函数，将输入小于0的值映射为0，大于等于0的值保持不变
//【参数】x - 输入值
//【返回值】double - ReLU函数的输出值
//【开发者及日期】李孟涵 2025年7月13日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double ActivationFunc::relu(double x) {
    return x > 0 ? x : 0;
}

//-------------------------------------------------------------------------------------------------------------------
//【函数名称】ActivationFunc::linear
//【函数功能】实现线性激活函数，直接返回输入值
//【参数】x - 输入值
//【返回值】double - 线性函数的输出值
//【开发者及日期】李孟涵 2025年7月13日
//【更改记录】无
//-------------------------------------------------------------------------------------------------------------------
double ActivationFunc::linear(double x) {
    return x;
}